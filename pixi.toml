[workspace]
channels = ["https://prefix.dev/pixi-build-backends","conda-forge"]
name = "FANS"
platforms = ["linux-64", "osx-64", "osx-arm64"]
preview = ["pixi-build"]

[dependencies]
FANS = { path = "." }
python = ">=3.13.3,<3.14"
pytest = ">=8.3.5,<9"
pre-commit = ">=4.2.0,<5"
sympy = ">=1.14.0,<2"
quaternion = ">=2024.0.8,<2025"
beartype = ">=0.20.2,<0.21"


[pypi-dependencies]
fans-dashboard = { path = "FANS_Dashboard", editable = true }
msutils = {git = "https://github.com/DataAnalyticsEngineering/MSUtils.git"}
pyrecest = {git = "https://github.com/FlorianPfaff/pyRecEst.git"}


[tasks]
test = "pytest -v -s"
precommit = "pre-commit run --all-files"


[package]
name = "FANS"
version = "0.3.0"

[package.build]
backend = { name = "pixi-build-cmake", version = "0.1.*" }
[package.build.configuration]
extra-args = [
    "-DCMAKE_BUILD_TYPE=Release",
    "-DCMAKE_C_COMPILER=$PREFIX/bin/mpicc",
    "-DCMAKE_CXX_COMPILER=$PREFIX/bin/mpicxx"
    ]

[package.build-dependencies]
cmake = "3.21.*"

[package.host-dependencies]
cmake = "3.21.*"
# hdf5 = { version = "*", build = "*openmpi*" } This does not work! Takes nompi version
hdf5 = { version = "1.14.*", build = "*openmpi*" }
# fftw = { version = "*", build = "*openmpi*" }
fftw = { version = "3.3.*", build = "*openmpi*" }
openmpi-mpicxx = "*"
eigen = "*"
